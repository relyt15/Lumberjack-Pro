import javafx.scene.control.CheckBox;
import javafx.scene.control.Label;
import javafx.scene.layout.HBox;
import javafx.geometry.Insets;
import javafx.geometry.Pos;
import javafx.scene.control.Button;
import javafx.scene.control.TextField;

public class ProjectPane extends HBox {
    private Project project;
    private TextField nameField;
    private TextField dueDateField;
    private TextField descriptionField;
    private Label nameLabel;
    private Label dueDateLabel;
    private Label descriptionLabel;
    private CheckBox completedCheckBox;
    private Button saveButton;

    public ProjectPane(Project project) {
        this.project = project;
        ProjectService projServ = new ProjectService();
        
        // Text field for Project Name
        nameField = new TextField(project.getProjectName());
        nameField.setPromptText("Project Name");

        
        // Label for Project Name
        nameLabel = new Label(project.getProjectName());
        nameLabel.setStyle("-fx-font-weight: bold;");
        

        // Text field for Project Due Date
        dueDateField = new TextField(project.getProjectDueDate());
        dueDateField.setPromptText("Due Date (YYYY-MM-DD)");
        
        // Label for Due Date
        dueDateLabel = new Label("Due: " + project.getProjectDueDate());
        
        // Text field for Project Description
        descriptionField = new TextField(project.getProjectDescription());
        descriptionField.setPromptText("Project Description");        

        // Checkbox for Completion
        completedCheckBox = new CheckBox();
        completedCheckBox.setSelected(project.isProjectCompleted());
        
        // Save Button to update Project details
        saveButton = new Button("Save");
        saveButton.setOnAction(e -> saveProjectDetails());

        // Update Project when checkbox is clicked
        completedCheckBox.setOnAction(e -> {
            if (completedCheckBox.isSelected()) {
                project.setProjectCompleted(); // Mark Project as completed
                projServ.removeProject(project);
            } else {
                project.setProjectStatus("pending"); // Set status back to pending.
            }
        });

        // Styling and Spacing
        this.setSpacing(15);
        this.setPadding(new Insets(10));
        this.setAlignment(Pos.CENTER_LEFT);

        // Add elements to the pane
        this.getChildren().addAll(nameField, dueDateField, descriptionField,
                completedCheckBox, saveButton);
    }
    
    private void saveProjectDetails() {
        project.setProjectName(nameField.getText());
        project.setProjectDueDate(dueDateField.getText());
        project.setProjectDescription(descriptionField.getText());
        if (completedCheckBox.isSelected()) {
            project.setProjectCompleted();
        }
        else {
            project.setProjectStatus("Pending");
        }
    }

}




